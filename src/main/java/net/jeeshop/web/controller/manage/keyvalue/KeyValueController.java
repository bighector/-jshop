package net.jeeshop.web.controller.manage.keyvalue;import net.jeeshop.biz.base.bean.PageBean;import net.jeeshop.biz.base.bean.PageQueryBean;import net.jeeshop.biz.base.service.BaseService;import net.jeeshop.biz.keyvalue.model.KeyValueObject;import net.jeeshop.biz.keyvalue.model.KeyValueObjectExample;import net.jeeshop.biz.keyvalue.service.KeyValueObjectService;import net.jeeshop.web.controller.manage.ManageBaseController;import org.apache.commons.lang.StringUtils;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.ModelMap;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.ResponseBody;/*** @author ysqin* Email: 442800318@qq.com*/@Controller@RequestMapping("/manage/keyvalue")public class KeyValueController extends ManageBaseController<KeyValueObject, KeyValueObjectExample>  {    private static final Logger logger = LoggerFactory            .getLogger(KeyValueController.class);    @Autowired    private KeyValueObjectService keyValueObjectService;        @SuppressWarnings({ "rawtypes", "unchecked" })	@Override	public BaseService getService() {		return keyValueObjectService;	}      	private static final String page_toList = "/manage/keyValue/keyValueList";      private static final String page_toAdd = "/manage/keyValue/keyValueEdit";      private static final String page_toEdit = "/manage/keyValue/keyValueEdit";          public KeyValueController() {        super.page_toEdit = page_toEdit;        super.page_toList = page_toList;        super.page_toAdd = page_toAdd;    }    	@SuppressWarnings("unchecked")	@RequestMapping("loadData")    @ResponseBody    public PageBean<KeyValueObject> loadData(KeyValueObjectExample keyValueObjectExample, PageQueryBean pageQueryBean) {		KeyValueObjectExample.Criteria criteria = keyValueObjectExample.createCriteria();        if (StringUtils.isNotBlank(keyValueObjectExample.getKeytemp())) {            criteria.andKeytempLike( keyValueObjectExample.getKeytemp());        }        if (StringUtils.isNotBlank(keyValueObjectExample.getValuetemp())) {            criteria.andValuetempLike(keyValueObjectExample.getValuetemp());        }        keyValueObjectExample.setOrderByClause("id");		@SuppressWarnings("rawtypes")		PageBean pager = keyValueObjectService.selectPageBean(keyValueObjectExample, pageQueryBean);        return pager;    }        /**     * 删除     *     * @return     * @throws Exception     */    @RequestMapping(value = "deleteByID", method = RequestMethod.POST)    @ResponseBody    public String deleteByID(Long id) throws Exception {        if (id == null) {            throw new NullPointerException("参数不正确！");        }        int isSuccess = keyValueObjectService.deleteById(id);        logger.info("delete resule : {}", isSuccess);        return String.valueOf(isSuccess);    }    @RequestMapping("toAdd")    public String toAdd(KeyValueObject e, ModelMap model) {        model.addAttribute("e", e);        return page_toAdd;    }}